// Generated by BUCKLESCRIPT VERSION 4.0.0, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");

function Tree(L) {
  var lead = function (t) {
    return /* Leaf */Block.variant("Leaf", 0, [t]);
  };
  var node = function (tree) {
    return /* Node */Block.variant("Node", 1, [/* :: */Block.simpleVariant("::", [
                  tree,
                  /* [] */0
                ])]);
  };
  var updateLeaf = function (t, tree) {
    while(true) {
      if (tree.tag) {
        continue ;
      } else {
        var data = tree[0];
        if (Curry._1(L[/* identity */0], data) === Curry._1(L[/* identity */0], t)) {
          return /* Leaf */Block.variant("Leaf", 0, [t]);
        } else {
          return /* Leaf */Block.variant("Leaf", 0, [data]);
        }
      }
    };
  };
  return /* module */Block.localModule([
            "lead",
            "node",
            "updateLeaf"
          ], [
            lead,
            node,
            updateLeaf
          ]);
}

exports.Tree = Tree;
/* No side effect */
