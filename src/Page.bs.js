// Generated by BUCKLESCRIPT VERSION 4.0.0, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var PromiseWrapper$ReactTemplate = require("./PromiseWrapper.bs.js");

function Make(D) {
  return (function (Pdef) {
      var ResourcePromiseWrapper = PromiseWrapper$ReactTemplate.PromiseWrapper(Pdef);
      var ifError = React.createElement("div", undefined, "ERROR");
      var ifPending = React.createElement("div", undefined, "Loading");
      var ifSuccess = function (resource) {
        return Curry._1(D[/* render */2], Curry._1(D[/* initialize */1], resource));
      };
      var component = ReasonReact.statelessComponent(D[/* componentName */0]);
      var make = function (loadResourceArg, _) {
        return /* record */Block.record([
                  "debugName",
                  "reactClassInternal",
                  "handedOffState",
                  "willReceiveProps",
                  "didMount",
                  "didUpdate",
                  "willUnmount",
                  "willUpdate",
                  "shouldUpdate",
                  "render",
                  "initialState",
                  "retainedProps",
                  "reducer",
                  "subscriptions",
                  "jsElementWrapped"
                ], [
                  component[/* debugName */0],
                  component[/* reactClassInternal */1],
                  component[/* handedOffState */2],
                  component[/* willReceiveProps */3],
                  component[/* didMount */4],
                  component[/* didUpdate */5],
                  component[/* willUnmount */6],
                  component[/* willUpdate */7],
                  component[/* shouldUpdate */8],
                  (function () {
                      return ReasonReact.element(undefined, undefined, Curry._5(ResourcePromiseWrapper[/* make */1], Curry._1(D[/* loadResource */3], loadResourceArg), ifSuccess, (function () {
                                        return ifError;
                                      }), ifPending, /* array */[]));
                    }),
                  component[/* initialState */10],
                  component[/* retainedProps */11],
                  component[/* reducer */12],
                  component[/* subscriptions */13],
                  component[/* jsElementWrapped */14]
                ]);
      };
      return /* module */Block.localModule([
                "ResourcePromiseWrapper",
                "ifError",
                "ifPending",
                "ifSuccess",
                "component",
                "make"
              ], [
                ResourcePromiseWrapper,
                ifError,
                ifPending,
                ifSuccess,
                component,
                make
              ]);
    });
}

function Page(D) {
  var initialize = function (loadResourceArg) {
    return Curry._1(D[/* loadResource */3], loadResourceArg).then((function (resource) {
                  return Promise.resolve(Curry._1(D[/* render */2], Curry._1(D[/* initialize */1], resource)));
                }));
  };
  return /* module */Block.localModule(["initialize"], [initialize]);
}

exports.Make = Make;
exports.Page = Page;
/* react Not a pure module */
