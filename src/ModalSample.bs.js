// Generated by BUCKLESCRIPT VERSION 4.0.0, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var Modal$ReactTemplate = require("./Modal.bs.js");
var ModalBody$ReactTemplate = require("./ModalBody.bs.js");
var ModalFooter$ReactTemplate = require("./ModalFooter.bs.js");
var ModalHeader$ReactTemplate = require("./ModalHeader.bs.js");

var component = ReasonReact.reducerComponent("ModalSampleComponent");

function make() {
  return /* record */Block.record([
            "debugName",
            "reactClassInternal",
            "handedOffState",
            "willReceiveProps",
            "didMount",
            "didUpdate",
            "willUnmount",
            "willUpdate",
            "shouldUpdate",
            "render",
            "initialState",
            "retainedProps",
            "reducer",
            "subscriptions",
            "jsElementWrapped"
          ], [
            component[/* debugName */0],
            component[/* reactClassInternal */1],
            component[/* handedOffState */2],
            component[/* willReceiveProps */3],
            component[/* didMount */4],
            component[/* didUpdate */5],
            component[/* willUnmount */6],
            component[/* willUpdate */7],
            component[/* shouldUpdate */8],
            (function (self) {
                return React.createElement("div", undefined, ReasonReact.element(undefined, undefined, Modal$ReactTemplate.make(!self[/* state */1][/* isOpen */0], /* Large */0, (function () {
                                      return Curry._1(self[/* send */3], /* Close */1);
                                    }), Js_primitive.some(ReasonReact.element("header", undefined, ModalHeader$ReactTemplate.make(React.createElement("h3", undefined, "MODAL!"), React.createElement("button", {
                                                    className: "close",
                                                    type: "button"
                                                  }, React.createElement("span", undefined, "\xc3\x97"))))), Js_primitive.some(ReasonReact.element(undefined, undefined, ModalFooter$ReactTemplate.make(React.createElement("button", {
                                                    className: "btn btn-primary",
                                                    type: "button",
                                                    onClick: (function () {
                                                        return Curry._1(self[/* send */3], /* Close */1);
                                                      })
                                                  }, "CLOSE")))), Js_primitive.some(ReasonReact.element("body", undefined, ModalBody$ReactTemplate.make(React.createElement("div", undefined, React.createElement("p", {
                                                        onClick: (function () {
                                                            console.log("JS");
                                                            return /* () */0;
                                                          })
                                                      }, "LINE1LINE1LINE1LINE1LINE1LINE1LINE1LINE1LINE1sLINE1LINE1LINE1LINE1LINE1LINE1LINE1LINE1LINE1s"), React.createElement("span", undefined, "LINE2"))))), /* array */[])), React.createElement("button", {
                                onClick: (function () {
                                    return Curry._1(self[/* send */3], /* Open */0);
                                  })
                              }, "OPEN"));
              }),
            (function () {
                return /* record */Block.record(["isOpen"], [false]);
              }),
            component[/* retainedProps */11],
            (function (action, _) {
                if (action) {
                  return /* Update */Block.variant("Update", 0, [/* record */Block.record(["isOpen"], [false])]);
                } else {
                  return /* Update */Block.variant("Update", 0, [/* record */Block.record(["isOpen"], [true])]);
                }
              }),
            component[/* subscriptions */13],
            component[/* jsElementWrapped */14]
          ]);
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
