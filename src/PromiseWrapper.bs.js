// Generated by BUCKLESCRIPT VERSION 4.0.0, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");

function PromiseWrapper() {
  var component = ReasonReact.reducerComponent("PromiseWrapper");
  var make = function (promise, whenSuccess, whenError, whenPending, _) {
    return /* record */[
            /* debugName */component[/* debugName */0],
            /* reactClassInternal */component[/* reactClassInternal */1],
            /* handedOffState */component[/* handedOffState */2],
            /* willReceiveProps */component[/* willReceiveProps */3],
            /* didMount */(function (self) {
                promise.then((function (value) {
                          return Promise.resolve(Curry._1(self[/* send */3], /* Completed */Block.__(0, [value])));
                        })).catch((function (error) {
                        return Promise.resolve(Curry._1(self[/* send */3], /* Error */Block.__(1, [error])));
                      }));
                return /* () */0;
              }),
            /* didUpdate */component[/* didUpdate */5],
            /* willUnmount */component[/* willUnmount */6],
            /* willUpdate */component[/* willUpdate */7],
            /* shouldUpdate */component[/* shouldUpdate */8],
            /* render */(function (self) {
                var match = self[/* state */1];
                if (match !== undefined) {
                  var result = match;
                  if (result.tag) {
                    return Curry._1(whenError, result[0]);
                  } else {
                    return Curry._1(whenSuccess, result[0]);
                  }
                } else {
                  return whenPending;
                }
              }),
            /* initialState */(function () {
                return undefined;
              }),
            /* retainedProps */component[/* retainedProps */11],
            /* reducer */(function (action, _) {
                if (action.tag) {
                  var state = /* Failure */Block.__(1, [action[0]]);
                  return /* Update */Block.__(0, [state]);
                } else {
                  var state$1 = /* Success */Block.__(0, [action[0]]);
                  return /* Update */Block.__(0, [state$1]);
                }
              }),
            /* subscriptions */component[/* subscriptions */13],
            /* jsElementWrapped */component[/* jsElementWrapped */14]
          ];
  };
  return /* module */[
          /* component */component,
          /* make */make
        ];
}

exports.PromiseWrapper = PromiseWrapper;
/* ReasonReact Not a pure module */
