// Generated by BUCKLESCRIPT VERSION 4.0.0, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var ReactHelper$ReactTemplate = require("./ReactHelper.bs.js");

var component = ReasonReact.statelessComponent("ModalComponent");

function modalSizeToAttr(size) {
  switch (size) {
    case 0 : 
        return "modal-lg";
    case 1 : 
        return "modal-sm";
    case 2 : 
        return "";
    
  }
}

var modalOpenStyle = {
  display: "block",
  visibility: "visible",
  opacity: "1",
  transition: "all 0.5s"
};

var modalHiddenStyle = {
  bottom: "auto",
  display: "block",
  top: "-100vh",
  visibility: "hidden",
  zIndex: "-1",
  opacity: "1",
  transition: "all 0.5s",
  pointerEvents: "none"
};

function make(hidden, size, onClickContentOutside, header, footer, body, _) {
  return /* record */Block.record([
            "debugName",
            "reactClassInternal",
            "handedOffState",
            "willReceiveProps",
            "didMount",
            "didUpdate",
            "willUnmount",
            "willUpdate",
            "shouldUpdate",
            "render",
            "initialState",
            "retainedProps",
            "reducer",
            "subscriptions",
            "jsElementWrapped"
          ], [
            component[/* debugName */0],
            component[/* reactClassInternal */1],
            component[/* handedOffState */2],
            component[/* willReceiveProps */3],
            component[/* didMount */4],
            component[/* didUpdate */5],
            component[/* willUnmount */6],
            component[/* willUpdate */7],
            component[/* shouldUpdate */8],
            (function () {
                return React.createElement("div", {
                            className: "modal" + (
                              hidden ? " hidden" : " open"
                            ),
                            style: hidden ? modalHiddenStyle : modalOpenStyle,
                            onClick: (function () {
                                return ReactHelper$ReactTemplate.optionalHandler(onClickContentOutside);
                              })
                          }, React.createElement("div", {
                                className: "modal-dialog " + modalSizeToAttr(size),
                                onClick: (function ($$event) {
                                    $$event.stopPropagation();
                                    return /* () */0;
                                  })
                              }, React.createElement("div", {
                                    className: "modal-content"
                                  }, ReactHelper$ReactTemplate.option(header), ReactHelper$ReactTemplate.option(body), ReactHelper$ReactTemplate.option(footer))));
              }),
            component[/* initialState */10],
            component[/* retainedProps */11],
            component[/* reducer */12],
            component[/* subscriptions */13],
            component[/* jsElementWrapped */14]
          ]);
}

exports.component = component;
exports.modalSizeToAttr = modalSizeToAttr;
exports.modalOpenStyle = modalOpenStyle;
exports.modalHiddenStyle = modalHiddenStyle;
exports.make = make;
/* component Not a pure module */
