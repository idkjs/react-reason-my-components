// Generated by BUCKLESCRIPT VERSION 4.0.0, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Operator$ReactTemplate = require("../Operator.bs.js");
var Validation$ReactTemplate = require("../Validation.bs.js");

var validateText = Validation$ReactTemplate.fromErrors((function (text) {
        if (text.length > 10) {
          return /* :: */Block.simpleVariant("::", [
                    /* TextIsOverMaxLength */0,
                    /* [] */0
                  ]);
        } else {
          return /* [] */0;
        }
      }));

function validateAge(getAge) {
  return Validation$ReactTemplate.fromErrors((function (record) {
                if (Curry._1(getAge, record) >= 0) {
                  return /* [] */0;
                } else {
                  return /* :: */Block.simpleVariant("::", [
                            /* InvalidAge */1,
                            /* [] */0
                          ]);
                }
              }));
}

function validateName(getName) {
  return Validation$ReactTemplate.fromErrors((function (record) {
                if (Curry._1(getName, record) === "") {
                  return /* :: */Block.simpleVariant("::", [
                            /* InvalidName */0,
                            /* [] */0
                          ]);
                } else {
                  return /* [] */0;
                }
              }));
}

function ifEmptyString(getString, errors) {
  return Validation$ReactTemplate.fromErrors((function (source) {
                if (Curry._1(getString, source) === "") {
                  return errors;
                } else {
                  return /* [] */0;
                }
              }));
}

Validation$ReactTemplate.run(validateText, "success!");

Validation$ReactTemplate.run(Validation$ReactTemplate.all(/* :: */Block.simpleVariant("::", [
            ifEmptyString(Operator$ReactTemplate.identity, /* :: */Block.simpleVariant("::", [
                    /* TextIsEmpty */1,
                    /* [] */0
                  ])),
            /* :: */Block.simpleVariant("::", [
                validateText,
                /* [] */0
              ])
          ])), "");

var sample = {
  name: "dad",
  age: 30
};

Validation$ReactTemplate.run(Validation$ReactTemplate.all(/* :: */Block.simpleVariant("::", [
            validateAge((function (prim) {
                    return prim.age;
                  })),
            /* :: */Block.simpleVariant("::", [
                validateName((function (prim) {
                        return prim.name;
                      })),
                /* [] */0
              ])
          ])), sample);

exports.validateText = validateText;
exports.validateAge = validateAge;
exports.validateName = validateName;
exports.ifEmptyString = ifEmptyString;
/* validateText Not a pure module */
