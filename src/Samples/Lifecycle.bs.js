// Generated by BUCKLESCRIPT VERSION 4.0.0, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");

function MakePage(Mvu) {
  var update = function (msg, page) {
    var tup = Curry._2(Mvu[/* update */0], msg, page[/* model */0]);
    return /* tuple */[
            /* record */[/* model */tup[0]],
            tup[1]
          ];
  };
  var init = function (seed) {
    return /* record */[/* model */Curry._1(Mvu[/* init */1], seed)];
  };
  return /* module */[
          /* update */update,
          /* init */init
        ];
}

function update(msg, model) {
  switch (msg.tag | 0) {
    case 0 : 
        return /* tuple */[
                List.append(/* :: */[
                      msg[0],
                      /* [] */0
                    ], model),
                /* [] */0
              ];
    case 1 : 
        return /* tuple */[
                msg[0],
                /* [] */0
              ];
    case 2 : 
        var id = msg[0];
        return /* tuple */[
                List.filter((function (todo) {
                          return todo[/* id */0] === id;
                        }))(model),
                /* [] */0
              ];
    
  }
}

function init(seed) {
  return /* :: */[
          seed,
          /* [] */0
        ];
}

var TodoMvu = /* module */[
  /* update */update,
  /* init */init
];

function update$1(msg, page) {
  var tup = update(msg, page[/* model */0]);
  return /* tuple */[
          /* record */[/* model */tup[0]],
          tup[1]
        ];
}

function init$1(seed) {
  return /* record */[/* model : :: */[
            seed,
            /* [] */0
          ]];
}

var TodoPage = /* module */[
  /* update */update$1,
  /* init */init$1
];

var todoPage = /* record */[/* model : :: */[
    /* record */[
      /* id : Id */[""],
      /* title */"nama"
    ],
    /* [] */0
  ]];

var a = todoPage[/* model */0];

var headTodo = List.hd(a);

var headTitleTodo = headTodo[/* title */1];

var match = update$1(/* DeteteTodo */Block.__(2, [/* Id */[""]]), todoPage);

var promises = match[1];

var updatePromise = Promise.all($$Array.of_list(promises));

var updatedTodoPage = match[0];

exports.MakePage = MakePage;
exports.TodoMvu = TodoMvu;
exports.TodoPage = TodoPage;
exports.todoPage = todoPage;
exports.a = a;
exports.headTodo = headTodo;
exports.headTitleTodo = headTitleTodo;
exports.updatedTodoPage = updatedTodoPage;
exports.promises = promises;
exports.updatePromise = updatePromise;
/* headTodo Not a pure module */
